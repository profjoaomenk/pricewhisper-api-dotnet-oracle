<?xml version="1.0"?>
<doc>
    <assembly>
        <name>pricewhisper</name>
    </assembly>
    <members>
        <member name="M:pricewhisper.Controllers.EmpresaController.Get">
            <summary>
            Obtém todos as empresas.
            </summary>
            <remarks>
            Exemplo de uso: GET /api/Empresa
            </remarks>
            <response code="200">Retorna a lista de todas as empresas.</response>
        </member>
        <member name="M:pricewhisper.Controllers.EmpresaController.GetById(System.Int32)">
            <summary>
            Obtém uma Empresa pelo ID.
            </summary>
            <param name="id">O ID da empresa que você deseja obter.</param>
            <returns>A empresa com o id especificado.</returns>
            <remarks>
            Exemplo de uso: GET /api/Empresa/1
            </remarks>
            <response code="200">Retorna a Empresa.</response>
            <response code="404">Empresa não encontrada.</response>
        </member>
        <member name="M:pricewhisper.Controllers.EmpresaController.Create(pricewhisper.Models.Empresa)">
            <summary>
            Cria uma nova Empresa.
            </summary>
            <remarks>
            Este endpoint permite que você crie uma nova Empresa. 
            
            Exemplo de uso:
            
            POST /api/Empresa
            
            Body:
            {
             "empresaId": 0,
             "cnpj": "string",
             "razaoSocial": "string",
             "nomeFantasia": "string",
             "usuarios": [
               {
                 "usuarioId": 0,
                 "nome": "string",
                 "nomeUsuario": "string",
                 "senha": "string",
                 "empresaId": 0,
                 "empresa": "string"
               }
             ]
            }
            </remarks>
            <response code="201">A empresa foi criada com sucesso.</response>
            <response code="400">Solicitação inválida. Pode ocorrer se algum campo obrigatório estiver faltando ou o formato estiver incorreto.</response>
            <response code="500">Erro interno do servidor. Ocorre se houver um problema ao processar a solicitação.</response>
        </member>
        <member name="M:pricewhisper.Controllers.EmpresaController.Update(System.Int32,pricewhisper.Models.Empresa)">
            <summary>
            Atualiza uma Empresa existente.
            </summary>
            <remarks>
            Este endpoint permite que você atualize uma empresa. 
            
            Exemplo de uso:
            
            PUT /api/Empresa/{id}
            
            Body:
            {
             "empresaId": 0,
             "cnpj": "string",
             "razaoSocial": "string",
             "nomeFantasia": "string",
             "usuarios": [
               {
                 "usuarioId": 0,
                 "nome": "string",
                 "nomeUsuario": "string",
                 "senha": "string",
                 "empresaId": 0,
                 "empresa": "string"
               }
             ]
            }
            </remarks>
            <response code="200">A empresa foi atualizada com sucesso.</response>
            <response code="400">Solicitação inválida. Pode ocorrer se algum campo obrigatório estiver faltando ou o formato estiver incorreto.</response>
            <response code="500">Erro interno do servidor. Ocorre se houver um problema ao processar a solicitação.</response>
        </member>
        <member name="M:pricewhisper.Controllers.EmpresaController.Delete(System.Int32)">
            <summary>
            Remove uma empresa pelo ID.
            </summary>
            <param name="id">O ID da empresa que você deseja remover.</param>
            <remarks>
            Exemplo de uso: DELETE /api/Empresa/1
            </remarks>
            <response code="200">Empresa deletada com sucesso</response>
            <response code="404">Empresa não encontrada.</response>
        </member>
        <member name="M:pricewhisper.Controllers.UsuarioController.Get">
            <summary>
            Obtém todos os usuários.
            </summary>
            <remarks>
            Exemplo de uso: GET /api/Usuario
            </remarks>
            <response code="200">Retorna a lista de todos os usuários.</response>
        </member>
        <member name="M:pricewhisper.Controllers.UsuarioController.GetById(System.Int32)">
            <summary>
            Obtém um usuário pelo ID.
            </summary>
            <param name="id">O ID do usuário que você deseja obter.</param>
            <returns>O usuário com o ID especificado.</returns>
            /// <remarks>
            Exemplo de uso: GET /api/Usuario/1
            </remarks>
            <response code="200">Retorna o usuário.</response>
            <response code="404">Usuário não encontrado.</response>
        </member>
        <member name="M:pricewhisper.Controllers.UsuarioController.Create(pricewhisper.Models.Usuario)">
            <summary>
            Cria um novo Usuário.
            </summary>
            <remarks>
            Este endpoint permite que você crie um novo usuário. 
            
            Exemplo de uso:
            
            POST /api/Usuario
            
            Body:
            {
                 "usuarioId": 0,
                 "nome": "string",
                 "nomeUsuario": "string",
                  "senha": "string",
                 "empresaId": 0,
                 "empresa": {
                    "empresaId": 0,
                    "cnpj": "string",
                    "razaoSocial": "string",
                    "nomeFantasia": "string",
                    "usuarios": [
                        "string"
                    ]
                 }
            }
            </remarks>
            <response code="201">O usuário foi criado com sucesso.</response>
            <response code="400">Solicitação inválida. Pode ocorrer se algum campo obrigatório estiver faltando ou o formato estiver incorreto.</response>
            <response code="500">Erro interno do servidor. Ocorre se houver um problema ao processar a solicitação.</response>
        </member>
        <member name="M:pricewhisper.Controllers.UsuarioController.Update(System.Int32,pricewhisper.Models.Usuario)">
            <summary>
            Atualiza um Usuário existente.
            </summary>
            <remarks>
            Este endpoint permite que você atualize um usuário. 
            
            Exemplo de uso:
            
            PUT /api/Usuario/{id}
            
            Body:
            {
                 "usuarioId": 0,
                 "nome": "string",
                 "nomeUsuario": "string",
                 "senha": "string",
                 "empresaId": 0
            }
            </remarks>
            <response code="200">O usuário foi atualizado com sucesso.</response>
            <response code="400">Solicitação inválida.</response>
            <response code="404">Usuário não encontrado.</response>
            <response code="500">Erro interno do servidor.</response>
        </member>
        <member name="M:pricewhisper.Controllers.UsuarioController.Delete(System.Int32)">
            <summary>
            Remove um usuário pelo ID.
            </summary>
            <param name="id">O ID do usuário que você deseja remover.</param>
            <remarks>
            Exemplo de uso: DELETE /api/Usuario/1
            </remarks>
            <response code="200">Usuário deletado com sucesso</response>
            <response code="404">Usuário não encontrado.</response>
        </member>
        <member name="T:pricewhisper.Migrations.Initial">
            <inheritdoc />
        </member>
        <member name="M:pricewhisper.Migrations.Initial.Up(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)">
            <inheritdoc />
        </member>
        <member name="M:pricewhisper.Migrations.Initial.Down(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)">
            <inheritdoc />
        </member>
        <member name="M:pricewhisper.Migrations.Initial.BuildTargetModel(Microsoft.EntityFrameworkCore.ModelBuilder)">
            <inheritdoc />
        </member>
        <member name="T:pricewhisper.Migrations._02">
            <inheritdoc />
        </member>
        <member name="M:pricewhisper.Migrations._02.Up(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)">
            <inheritdoc />
        </member>
        <member name="M:pricewhisper.Migrations._02.Down(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)">
            <inheritdoc />
        </member>
        <member name="M:pricewhisper.Migrations._02.BuildTargetModel(Microsoft.EntityFrameworkCore.ModelBuilder)">
            <inheritdoc />
        </member>
        <member name="T:pricewhisper.Migrations.InitialCreate">
            <inheritdoc />
        </member>
        <member name="M:pricewhisper.Migrations.InitialCreate.Up(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)">
            <inheritdoc />
        </member>
        <member name="M:pricewhisper.Migrations.InitialCreate.Down(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)">
            <inheritdoc />
        </member>
        <member name="M:pricewhisper.Migrations.InitialCreate.BuildTargetModel(Microsoft.EntityFrameworkCore.ModelBuilder)">
            <inheritdoc />
        </member>
    </members>
</doc>
