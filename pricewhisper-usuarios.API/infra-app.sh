#!/usr/bin/env bash
set -euo pipefail

# Consome os parâmetros POSICIONAIS vindos da Tarefa do Azure CLI (CUIDADO AO INFORMAR NA TAREFA)
DbHost="${1:?DbHost ausente}"
DbPort="${2:?DbPort ausente}"
DbSid="${3:?DbSid ausente}"
DbUser="${4:?DbUser ausente}"
DbPass="${5:?DbPass ausente}"

# ===================================
# Atividades do Banco de Dados Oracle
# ===================================

# Download do SQLcl portável
if [ ! -x "$HOME/sqlcl/bin/sql" ]; then
  echo "Baixando SQLcl..."
  curl -L -o "$HOME/sqlcl.zip" "https://download.oracle.com/otn_software/java/sqldeveloper/sqlcl-latest.zip"
  echo "Extraindo SQLcl..."
  unzip -q "$HOME/sqlcl.zip" -d "$HOME"
fi
SQLBIN="$HOME/sqlcl/bin/sql"

# Script SQL tratando objetos existentes no Banco
echo "Criando Script de Banco..."
cat > cria_objetos.sql <<'SQL'
WHENEVER SQLERROR EXIT SQL.SQLCODE

BEGIN
  EXECUTE IMMEDIATE q'[
    CREATE TABLE "Empresas" (
      "EmpresaId" NUMBER(10) GENERATED BY DEFAULT ON NULL AS IDENTITY
        (START WITH 1 INCREMENT BY 1) NOT NULL,
      "CNPJ" NVARCHAR2(2000) NOT NULL,
      "RazaoSocial" NVARCHAR2(2000) NOT NULL,
      "NomeFantasia" NVARCHAR2(2000) NOT NULL,
      CONSTRAINT "PK_Empresas" PRIMARY KEY ("EmpresaId")
    )
  ]';
EXCEPTION
  WHEN OTHERS THEN IF SQLCODE = -955 THEN NULL; ELSE RAISE; END IF;
END;
/

BEGIN
  EXECUTE IMMEDIATE q'[
    CREATE TABLE "Usuarios" (
      "UsuarioId" NUMBER(10) GENERATED BY DEFAULT ON NULL AS IDENTITY
        (START WITH 1 INCREMENT BY 1) NOT NULL,
      "Nome" NVARCHAR2(2000) NOT NULL,
      "NomeUsuario" NVARCHAR2(2000) NOT NULL,
      "Senha" NVARCHAR2(2000) NOT NULL,
      "EmpresaId" NUMBER(10) NOT NULL,
      CONSTRAINT "PK_Usuarios" PRIMARY KEY ("UsuarioId")
    )
  ]';
EXCEPTION
  WHEN OTHERS THEN IF SQLCODE = -955 THEN NULL; ELSE RAISE; END IF;
END;
/

BEGIN
  EXECUTE IMMEDIATE q'[
    ALTER TABLE "Usuarios"
    ADD CONSTRAINT "FK_Usuarios_Empresas_EmpresaId"
      FOREIGN KEY ("EmpresaId")
      REFERENCES "Empresas" ("EmpresaId")
      ON DELETE CASCADE
  ]';
EXCEPTION
  WHEN OTHERS THEN IF SQLCODE = -2275 THEN NULL; ELSE RAISE; END IF;
END;
/

BEGIN
  EXECUTE IMMEDIATE q'[
    CREATE INDEX "IX_Usuarios_EmpresaId" ON "Usuarios" ("EmpresaId")
  ]';
EXCEPTION
  WHEN OTHERS THEN IF SQLCODE = -955 THEN NULL; ELSE RAISE; END IF;
END;
/

EXIT
SQL

echo "Executando cria_objetos.sql..."
"$SQLBIN" "${DbUser}/${DbPass}@${DbHost}:${DbPort}/${DbSid}" @cria_objetos.sql
echo "[OK] Objetos do BD prontos"

# ===================
# Atividades da Azure
# ===================
rg="rg-api-dotnet"
location=${LOCATION}
plan="planApiDotnet"
app=${NOME_WEBAPP}
runtime="dotnet:8"
sku="F1"

# Criar os Recursos necessários em Nuvem
echo "Criando Grupo de Recursos..."
az group create --name "$rg" --location "$location" 1>/dev/null
echo "Criando Plano de Serviço..."
az appservice plan create --name "$plan" --resource-group "$rg" --location "$location" --sku "$sku" 1>/dev/null
echo "Criando Serviço de Aplicativo..."
az webapp create --resource-group "$rg" --plan "$plan" --runtime "$runtime" --name "$app" 1>/dev/null

# Captura estado atual dos logs
app_logging="$(az webapp log show -g "$rg" -n "$app" --query 'applicationLogs.fileSystem.level' -o tsv 2>/dev/null || true)"
ws_logging="$(az webapp log show -g "$rg" -n "$app" --query 'httpLogs.fileSystem.enabled' -o tsv 2>/dev/null || true)"
det_errors="$(az webapp log show -g "$rg" -n "$app" --query 'detailedErrorMessages.enabled' -o tsv 2>/dev/null || true)"
failed_req="$(az webapp log show -g "$rg" -n "$app" --query 'failedRequestsTracing.enabled' -o tsv 2>/dev/null || true)"

# Condição: aplicar somente se algo não estiver habilitado como desejado
if [ "$app_logging" != "Information" ] || [ "$ws_logging" != "true" ] || [ "$det_errors" != "true" ] || [ "$failed_req" != "true" ]; then
  echo "Habilitando Logs do Serviço de Aplicativo..."
  az webapp log config \
    --resource-group "$rg" \
    --name "$app" \
    --application-logging filesystem \
    --web-server-logging filesystem \
    --level information \
    --detailed-error-messages true \
    --failed-request-tracing true 1>/dev/null
else
  echo "Logs já configurados"
fi

echo echo "[OK] Objetos da Azure prontos"
